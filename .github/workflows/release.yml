name: Release
on:
  push:
    branches:
      - main
env:
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

jobs:
  release:
    if: contains(github.event.head_commit.message, 'release')
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: universal-apple-darwin

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"
      - if: matrix.target
        run: rustup target add x86_64-apple-darwin aarch64-apple-darwin

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"

      - name: Install frontend dependencies
        run: yarn install

      - name: Build app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        with:
          tagName: demoapp-v__VERSION__
          releaseName: "Tauri Release Demo App v__VERSION__"
          releaseBody: "See the assets to download and install this version."
          args: ${{ matrix.target && format('--target {0}', matrix.target) }}

  update_json:
    runs-on: macos-latest
    needs: release
    steps:
      - uses: actions/checkout@v3

      - name: Set Node.js Env
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Update file
        working-directory: ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIST_ID: ${{ secrets.GIST_ID }}
        run: |
          - name: Run updater script
            run: node ./scripts/updater.mjs ${{ needs.release.outputs.releaseId }}
